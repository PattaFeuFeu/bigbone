version: '3.8'

services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: 'postgres'
    volumes:
      - './db/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql'
    ports:
      - '5432:5432'    
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]

  redis:
    image: redis:7-alpine
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true'
      - 'xpack.license.self_generated.type=basic'
      - 'xpack.security.enabled=false'
      - 'xpack.watcher.enabled=false'
      - 'xpack.graph.enabled=false'
      - 'xpack.ml.enabled=false'
      - 'cluster.name=es-mastodon'
      - 'discovery.type=single-node'
      - 'thread_pool.write.queue_size=1000'
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]

  web:
    image: tootsuite/mastodon:v4.0.2
    env_file: .env
    command: 'bash -c "/provision.sh; rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"'
    environment:
      RAILS_ENV: 'production'
    volumes:
      - './web/provision.sh:/provision.sh'
      - './web/production.rb:/opt/mastodon/config/environments/production.rb'
    ports:
      - '3000:3000'
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1" ]
    depends_on:
      db:
        condition: service_healthy
      redis:
       condition: service_healthy

  streaming:
    image: tootsuite/mastodon:v4.0.2
    env_file: .env
    command: node ./streaming
    healthcheck:
      test: [ "CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1" ]
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  sidekiq:
    image: tootsuite/mastodon:v4.0.2
    env_file: .env
    command: bundle exec sidekiq
    healthcheck:
      test: [ "CMD-SHELL", "ps aux | grep '[s]idekiq\ 6' || false" ]
    depends_on:
      web:
        condition: service_healthy
      streaming:
        condition: service_healthy

  nginx:
    build: ./nginx
    ports:
      - '443:443'
    depends_on:
      web:
        condition: service_healthy
      streaming:
        condition: service_healthy

  db-provision:
    build: ./db-provision
    environment:
      PGPASSWORD: 'mastodon'
    depends_on:
      web:
        condition: service_healthy
      streaming:
        condition: service_healthy
